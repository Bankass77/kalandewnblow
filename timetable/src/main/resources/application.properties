
# ========================================================
#  DATA SOURCE
# ========================================================

# Set here configurations for the database connection
# Connection url for the database
spring.datasource.url = jdbc:mysql://${MYSQL_HOST:localhost}:3306/densagoutimetabledb?useSSL=false
spring.datasource.username = root
spring.datasource.password = Mahamoudou79!
spring.sql.init.platform=mysql
spring.sql.init.mode=always
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.validation-query=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in project

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
	
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
# Allows Hibernate to generate SQL optimized for a particular DBMS and JPA properties
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL= DEBUG
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=30

#========================================================
#   Active  Profile
#=========================================================
spring.profiles.active=dev
#============================================================
#
#     Thymeleaf
#=============================================================
# Run Spring Boot on HTTPS only
#server.port=8443
#HTTP port
server.port=8081
spring.thymeleaf.cache=false
spring.web.resources.chain.strategy.content.enabled=true
spring.web.resources.chain.strategy.content.paths=/**
# This ensures that the default HTML template resolver of Thymeleaf has priority over our custom SVG resolver
# This ensures that the default HTML template resolver of Thymeleaf has priority over our custom SVG resolver
spring.thymeleaf.template-resolver-order=0
spring.messages.basename=i18n/messages
server.error.include-exception=true
server.error.include-stacktrace=always
application.version=1.0.0-timetable-SNAPSHOT
#============================================================
#
#     Eureka service 
#=============================================================
#Publish Application(Register with Eureka)
#server.port=8761
#spring.application.name=eureka-discovery
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false 
eureka.client.fetch-registry=false
#eureka.client.service-url.defaultZone: http://localhost:8761/eureka



